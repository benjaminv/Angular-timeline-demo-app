{"ast":null,"code":"/**\n * xss\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\nvar DEFAULT = require(\"./default\");\n\nvar parser = require(\"./parser\");\n\nvar FilterXSS = require(\"./xss\");\n/**\n * filter xss function\n *\n * @param {String} html\n * @param {Object} options { whiteList, onTag, onTagAttr, onIgnoreTag, onIgnoreTagAttr, safeAttrValue, escapeHtml }\n * @return {String}\n */\n\n\nfunction filterXSS(html, options) {\n  var xss = new FilterXSS(options);\n  return xss.process(html);\n}\n\nexports = module.exports = filterXSS;\nexports.filterXSS = filterXSS;\nexports.FilterXSS = FilterXSS;\n\nfor (var i in DEFAULT) exports[i] = DEFAULT[i];\n\nfor (var i in parser) exports[i] = parser[i]; // using `xss` on the browser, output `filterXSS` to the globals\n\n\nif (typeof window !== \"undefined\") {\n  window.filterXSS = module.exports;\n} // using `xss` on the WebWorker, output `filterXSS` to the globals\n\n\nfunction isWorkerEnv() {\n  return typeof self !== \"undefined\" && typeof DedicatedWorkerGlobalScope !== \"undefined\" && self instanceof DedicatedWorkerGlobalScope;\n}\n\nif (isWorkerEnv()) {\n  self.filterXSS = module.exports;\n}","map":null,"metadata":{},"sourceType":"script"}